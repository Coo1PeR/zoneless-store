// Include theming for Angular Material with `mat.theme()`.
// This Sass mixin will define CSS variables that are used for styling Angular Material
// components according to the Material 3 design spec.
// Learn more about theming and how to use it for your application's
// custom components at https://material.angular.dev/guide/theming
@use '@angular/material' as mat;
@use "shared";
@use "themes/light-theme";
@use "themes/dark-theme";
@use "themes/theme-colors" as theme;

html {
    color-scheme: light dark;
    @include mat.theme((
        color: (
            primary: mat.$azure-palette,
            tertiary: mat.$blue-palette,
        ),
        typography: "Roboto Flex",
        density: 0,
    ));
}

body {
    // Set a default background, font and text colors for the application using
    // Angular Material's system-level CSS variables. Learn more about these
    // variables at https://material.angular.dev/guide/system-variables
    background-color: var(--mat-sys-surface);
    color: var(--mat-sys-on-surface);
    font: var(--mat-sys-body-medium);

    // Reset the user agent margin.
    margin: 0;
}

*,
*::before,
*::after {
    box-sizing: border-box;
}

body,
h1, h2, h3, h4, h5, h6,
p, ul, ol, li,
blockquote, pre, dl, dt, dd,
figure, figcaption {
    margin: 0;
    padding: 0;
}

a {
    text-decoration: none;
    outline: none;
}

ol,
li {
    list-style-type: none;
}

html, body { height: 100%; }
body { margin: 0; font-family: "Roboto Flex", sans-serif; }


/*
// Include theming for Angular Material with `mat.theme()`.
// This Sass mixin will define CSS variables that are used for styling Angular Material
// components according to the Material 3 design spec.
// Learn more about theming and how to use it for your application's
// custom components at https://material.angular.dev/guide/theming
@use '@angular/material' as mat;
@use "shared";
@use "themes/theme-colors" as theme;

html {
    color-scheme: light;

    $app-theme: mat.define-theme((
        color: (
            primary: theme.$primary-palette,
            tertiary: theme.$tertiary-palette,
        )
    ));

    @include mat.all-component-themes($app-theme);
}

html[data-theme='dark'] {
    color-scheme: dark;

    $app-dark-theme: mat.define-theme((
        color: (
            primary: theme.$primary-palette,
            tertiary: theme.$tertiary-palette,
        )
    ));

    @include mat.all-component-colors($app-dark-theme);
    @include theme.high-contrast-overrides(dark);
}

body {
    background-color: var(--mat-sys-surface);
    color: var(--mat-sys-on-surface);
    font: var(--mat-sys-body-medium);
    margin: 0;
}

*,
*::before,
*::after {
    box-sizing: border-box;
}

body,
h1, h2, h3, h4, h5, h6,
p, ul, ol, li,
blockquote, pre, dl, dt, dd,
figure, figcaption {
    margin: 0;
    padding: 0;
}

a {
    text-decoration: none;
    outline: none;
}

ol,
li {
    list-style-type: none;
}

html, body { height: 100%; }
body { margin: 0; font-family: Roboto Flex, "Helvetica Neue", sans-serif; }
*/
